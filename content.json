{"meta":{"title":"王沛傑","subtitle":"Webサイト","description":"自分のサイト","author":"Eric Wang","url":"http://example.com","root":"/"},"pages":[{"title":"analytics","date":"2025-09-10T06:28:10.000Z","updated":"2025-09-10T06:28:10.302Z","comments":true,"path":"analytics/index.html","permalink":"http://example.com/analytics/index.html","excerpt":"","text":""},{"title":"archives","date":"2025-09-10T06:26:51.000Z","updated":"2025-09-13T03:46:18.445Z","comments":true,"path":"archives/index.html","permalink":"http://example.com/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2025-09-12T03:00:55.000Z","updated":"2025-09-12T03:00:55.932Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2025-09-17T08:16:56.462Z","updated":"2025-09-17T08:16:56.462Z","comments":true,"path":"gallery/exhibition.html","permalink":"http://example.com/gallery/exhibition.html","excerpt":"","text":"[{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-xox5UoY-Pg0oljx8OxmtL6pH--YQAC0RcAArmUQVZeO67XJhxTPjYE.jpg\",\"alt\":\"微信图片_20250915121507_37_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-5ox5Uprkz6DGesaEKmBsyoqaoWFAAC0xcAArmUQVbLTCinu1nTcjYE.jpg\",\"alt\":\"微信图片_20250915121505_36_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-1ox5UoL9sYwlC0_CKU3acAAZIciqgAAtIXAAK5lEFWDbOXTSQgFqM2BA.jpg\",\"alt\":\"微信图片_20250915121504_35_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-tox5UefxR_S4CnL3VO6TnA5ysCQQAC0BcAArmUQVbAz-5Zn3cIYTYE.jpg\",\"alt\":\"微信图片_20250915121502_34_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-pox5Ubo6IlptcH9-hBL1kbCHBEHQACzxcAArmUQVaa9P5Tn1ulPjYE.jpg\",\"alt\":\"微信图片_20250915121500_33_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-lox5UYjjBMHF3PutgmTr4gl9eQ-AACzhcAArmUQVaGZKYz4sKvXDYE.jpg\",\"alt\":\"微信图片_20250915121459_32_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-hox5UVny8ybQxltw_5XS3V3gq62AACzRcAArmUQVZcspjV0_crITYE.jpg\",\"alt\":\"微信图片_20250915121458_31_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-dox5UUOBPAQeiMJx3kmUzyc_GqiwACzBcAArmUQVaSnj1Jep9hMDYE.jpg\",\"alt\":\"微信图片_20250915121457_30_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB3-Zox5UUpW5mGYD5Lo8tIZ_zSrk5PAACyxcAArmUQVapDNvMu8-_TjYE.jpg\",\"alt\":\"微信图片_20250915121456_29_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB39lox5Tj36TYeYkYdG9FXlZ9ZS153gACvhcAArmUQVa6A4ZR5-wNcDYE.jpg\",\"alt\":\"微信图片_20250915121241_24_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB39dox5TjN4G1gCGbuAOdAAGeG0StvbIAArwXAAK5lEFWVTNiyOsAAeYFNgQ.jpg\",\"alt\":\"微信图片_20250915121240_23_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB39tox5TkGpMM0cuxNLs9Gohla-YYqwACwBcAArmUQVbjOhMN7WkAATQ2BA.jpg\",\"alt\":\"微信图片_20250915121238_21_25.jpg\",\"title\":\"\"}]"},{"title":"about","date":"2020-02-12T14:14:36.000Z","updated":"2025-09-10T07:03:48.255Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"姑的小屋 与&nbsp; cungduafa&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"","date":"2025-09-17T08:28:43.976Z","updated":"2025-09-17T08:28:43.976Z","comments":true,"path":"gallery/Mygo_Mujica.html","permalink":"http://example.com/gallery/Mygo_Mujica.html","excerpt":"","text":"[{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB4VVox9lOTAzPnd70HgN4wPY_a0AS2AACUhkAAvOKQVb80_T2xOS-wzYE.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://youke1.picui.cn/s1/2025/09/15/68c7aaf379627.png\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://youke1.picui.cn/s1/2025/09/15/68c7aaf2af14f.jpg\",\"alt\":\"\",\"title\":\"\"}]"},{"title":"Gallery","date":"2025-09-10T07:20:38.000Z","updated":"2025-09-17T08:24:55.217Z","comments":true,"path":"gallery/index.html","permalink":"http://example.com/gallery/index.html","excerpt":"","text":"我的作品 曾经的绘画 展览 喜欢的展览 Mygo_Mujica 关于Mygo_Mujica的图片 [{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAECHZxoym1oDIPNaNQobXt98SYJfv4orwACXRwAAr4MUVYmY6LaXWXlIzYE.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://youke1.picui.cn/s1/2025/09/15/68c7a7f70ae2d.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAECHW1oymozGOOTIJnfRAIgrzSL_k61ZAACIhwAAr4MUVY6SUELM3f1cDYE.png\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAECHW5oymoz7SDvHmJSgZVqyqKStx0thAACIxwAAr4MUVYeJkocGOUXDTYE.png\",\"alt\":\"\",\"title\":\"\"}]"},{"title":"link","date":"2025-09-12T03:01:53.000Z","updated":"2025-09-13T03:39:35.610Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":"友情链接友達 Ethan Axe 朋友的网站 网站值得推荐的网站 Youtube 视频网站 Twitter 社交分享平台"},{"title":"tags","date":"2020-02-13T12:24:16.000Z","updated":"2025-09-10T06:48:22.074Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2025-09-17T08:17:10.072Z","updated":"2025-09-17T08:17:10.072Z","comments":true,"path":"gallery/mywork.html","permalink":"http://example.com/gallery/mywork.html","excerpt":"","text":"[{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB32Zox4gM7Ndc_bxn9K9S89t0J-e03AACJxcAArmUQVagPEzz5OKWwzYE.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB32Fox4gGzI04bW9i2OEQRnuqj9yyIAACIhcAArmUQVYT_hNn7pOm1TYE.jpg\",\"alt\":\"\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB32hox4mmL43AkstN6Le7ynpcLzMltgACLRcAArmUQVameIbm6vWjZjYE.jpg\",\"alt\":\"微信图片_20250915112700_9_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB32Rox4gGSQ8531CbKgfGJdtC4cl4owACJRcAArmUQVZ5bSrnrVX5GTYE.jpg\",\"alt\":\"微信图片_20250915112704_13_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB33pox41SyVpg3rgSuyins2iKKVRqHAACUBcAArmUQVbzB4i5_UQ5ojYE.jpg\",\"alt\":\"微信图片_20250915114551_15_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB33Zox41NzyQkD67nIhpGOWkJ4RR7BwACTBcAArmUQVYNtidLlGM1njYE.jpg\",\"alt\":\"微信图片_20250915114638_16_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB33lox41OtsqrojkEyFfeMBm3ThR9KwACTxcAArmUQVaZfBMJ2UBGrjYE.jpg\",\"alt\":\"微信图片_20250915114710_17_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB33dox41Nwdr3suKJ253se9UnJmwqvAACTRcAArmUQVagxx0K2Y8s4DYE.jpg\",\"alt\":\"微信图片_20250915114733_18_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB33hox41NBCprh_DcwEbAtR35EX2V2wACThcAArmUQVb5sH2k24lcLzYE.jpg\",\"alt\":\"微信图片_20250915114922_19_25.jpg\",\"title\":\"\"},{\"url\":\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEB33Vox41NT1yR9js3g3RHeig4KMpaGwACSxcAArmUQVaOI7ZVr7e_9jYE.jpg\",\"alt\":\"微信图片_20250915115026_20_25.jpg\",\"title\":\"\"}]"},{"title":"document","date":"2025-09-12T03:00:55.000Z","updated":"2025-09-15T03:07:19.588Z","comments":true,"path":"document/index.html","permalink":"http://example.com/document/index.html","excerpt":"","text":""},{"title":"music","date":"2025-09-12T03:00:55.000Z","updated":"2025-09-15T09:10:08.643Z","comments":true,"path":"music/index.html","permalink":"http://example.com/music/index.html","excerpt":"","text":"四小时時間造出一坨，真破防了😄 (中国大陆请打开VPN播放) click the button 音乐播放器🎧"},{"title":"","date":"2025-09-15T09:03:44.010Z","updated":"2025-09-15T09:03:44.010Z","comments":true,"path":"music/music.html","permalink":"http://example.com/music/music.html","excerpt":"","text":"音乐播放器 body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d); color: #fff; margin: 0; padding: 20px; min-height: 100vh; display: flex; flex-direction: column; align-items: center; } .container { max-width: 900px; width: 100%; background: rgba(0, 0, 0, 0.7); border-radius: 15px; padding: 30px; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5); margin-top: 20px; } header { text-align: center; margin-bottom: 30px; } h1 { font-size: 2.5rem; margin-bottom: 10px; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); } .date { color: #e6d0b2; font-style: italic; } .player-container { margin: 20px 0; } .aplayer-title { color: #fdbb2d !important; /* 更改为金色 */ font-weight: bold; } .instructions { background: rgba(255, 255, 255, 0.1); padding: 20px; border-radius: 10px; margin-top: 30px; } .instructions h2 { color: #e6d0b2; margin-top: 0; } .tips { color: #ff6b6b; font-weight: bold; margin: 15px 0; padding: 10px; background: rgba(255, 255, 255, 0.1); border-left: 4px solid #ff6b6b; } footer { margin-top: 30px; text-align: center; color: #ccc; font-size: 0.9rem; } 音乐播放器 2025年9月12日 Powered by APlayer | 音乐来源: 网络资源 // 初始化APlayer const ap = new APlayer({ container: document.getElementById('aplayer'), narrow: false, autoplay: false, // 改为false，因为大多数浏览器阻止自动播放 mode: 'random', showlrc: 3, mutex: true, theme: '#e6d0b2', preload: 'metadata', listmaxheight: '513px', music: [ { title: \"ガーデン\", author: \"藤井風\", url: \"https://skilled-silver-ctfwsz8a3c.edgeone.app/M500000tZXp523cI9x.mp3\", pic: \"https://extended-amaranth-dpyl8zkizl.edgeone.app/微信图片_20250913205535_8_25.png\", lrc: \"https://ericwang20302-beep.github.io/music-player/ガーデン-藤井风.lrc\" } ] }); // 添加错误处理 ap.on('error', function() { console.error('播放器初始化出错，请检查音乐文件URL'); alert('音乐加载失败，请检查网络连接或音乐文件URL'); }); // 添加播放器就绪事件 ap.on('ready', function() { console.log('播放器已就绪'); });"}],"posts":[{"title":"爬虫：抓取网站信息和图片","slug":"爬虫","date":"2025-09-25T02:11:56.404Z","updated":"2025-10-06T08:25:17.595Z","comments":true,"path":"post/4.html","permalink":"http://example.com/post/4.html","excerpt":"","text":"爬虫：抓取某网站信息&nbsp;可以根据搜索内容获取任意 影片的信息并下载图片😋。如果需要使用的话，请看以下教程💃。 使用方法1· 搭建python环境 任意能运行Python的环境即可 2· 导包 from urllib import parseimport timeimport randomimport csvfrom bs4 import BeautifulSoup #需外部导入,下同 pip install bs4import requests pip install requestsfrom lxml import etree pip install lxmlimport pandas as pd pip install pandasimport os 3· 主程序 class Crawler(object): #初始化url属性 def __init__(self): self.url = &#x27;https://www.avgc1.com/zh/search/&#123;&#125;?&#123;&#125;&#x27; #获取网页的HTML信息 def get_html(self, url): html = requests.get( url = url, headers = &#123;&#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0&#x27;&#125; ).text return html #一级页面解析函数 def parse_html_1(self, html): #提取标题和演员 soup = BeautifulSoup(html, &#x27;html.parser&#x27;) # 根据实际HTML结构调整选择器 movies = soup.find_all(&#x27;div&#x27;, class_=&#x27;v-card-text pa-3&#x27;) # 解析标题和演员 movies_data = [] for movie in movies: # 在同一个容器内提取标题和演员 title_element = movie.find(&#x27;h5&#x27;) title = title_element.get_text(strip=True) if title_element else &quot;未知标题&quot; name_elements = movie.find_all(&#x27;span&#x27;, class_=&#x27;v-btn__content&#x27;) name = [None] * len(name_elements) # 创建长度和name_elements的空列表 i = 0 for name_element in name_elements: name[i] = name_element.get_text().strip() i += 1 movies_data.append(&#123; &#x27;title&#x27;: title, &#x27;actors&#x27;: name # 可能包含多个演员 &#125;) self.save_html(movies_data) #获取二级页面链接 parse_html = etree.HTML(html) href_list = parse_html.xpath(&#x27;//div[contains(@class, &quot;grid&quot;)]//a[contains(@href, &quot;/zh/movies/&quot;)]/@href&#x27;) number_list = [] category_list = [] views_list = [] url_list = [] img_list = [] for href in href_list[:]: #遍历2级url列表提取信息保存在以上列表里 url_2 = &#x27;https://www.avgc1.com&#123;&#125;&#x27; url_2 = url_2.format(href) html_2 = self.get_html(url_2) number, category, views, img = self.parse_html_2(html_2) number_list.append(number) if number else &quot;无&quot; category_list.append(category) if category else &quot;无&quot; views_list.append(views) if views else &quot;无&quot; img_list.append(img) url_list.append(url_2) self.save_html_2(number_list, category_list, views_list, url_list) self.get_image(img_list, movies_data) #二级页面解析函数 def parse_html_2(self, html_2): #进入下一级页面提取信息 parse_html = etree.HTML(html_2) number = parse_html.xpath(&#x27;//div[@class=&quot;mt-4 d-flex ga-2 align-center&quot;]/h2/text()&#x27;)[0] #注意xpath表达式匹配结果是一个列表，因此需要索引[0]提取数据 category = &#x27;, &#x27;.join(parse_html.xpath(&#x27;//div[@class=&quot;mt-4 flex flex-wrap ga-2 align-center&quot;]/a[contains(@href, &quot;/zh/genre/&quot;)]/@title&#x27;)) # 将所有元素合并为一个字符串 views = parse_html.xpath(&#x27;//div[@class=&quot;mt-4 d-flex ga-2 align-center&quot;]/span[contains(., &quot;浏览量：&quot;)]/following-sibling::span/text()&#x27;)[0] img = parse_html.xpath(&#x27;//meta[@name=&quot;twitter:image&quot;]/@content&#x27;)[0] return number, category, views, img #保存文件函数 def save_html(self, movies_data): #生成文件对象 with open(&#x27;search.csv&#x27;, &#x27;a&#x27;, newline=&#x27;&#x27;, encoding=&quot;utf-8-sig&quot;) as f: #生成csv操作对象 writer = csv.writer(f) writer.writerow([&#x27;标题&#x27;, &#x27;演员&#x27;, &#x27;链接&#x27;, &#x27;类型&#x27;, &#x27;番号&#x27;, &#x27;播放量&#x27;]) for movie in movies_data[:]: title = movie[&#x27;title&#x27;] if movie[&#x27;actors&#x27;]: writer.writerow([title, &#x27;, &#x27;.join(movie[&#x27;actors&#x27;])]) else: writer.writerow([title, &#x27;未知演员&#x27;]) #改写文件函数，加入新数据 def save_html_2(self, number_list, category_list, views_list, url_list): df = pd.read_csv(&#x27;search.csv&#x27;, encoding=&#x27;utf-8-sig&#x27;) # 直接使用loc更新列 N1 = len(url_list) N2 = len(df[&#x27;标题&#x27;]) df.loc[N2- N1: N2, &#x27;链接&#x27;] = url_list df.loc[N2- N1: N2, &#x27;类型&#x27;] = category_list df.loc[N2- N1: N2, &#x27;番号&#x27;] = number_list df.loc[N2- N1: N2, &#x27;播放量&#x27;] = views_list # 保存回文件 df.to_csv(&#x27;search.csv&#x27;, index=False, encoding=&#x27;utf-8-sig&#x27;) #获取图像 def get_image(self, img_list, movies_data): title_list = [] for movie in movies_data: title_list.append(movie[&#x27;title&#x27;]) for i, img_url in enumerate(img_list[:]): filename = &#x27;&#123;&#125;.jpg&#x27;.format(title_list[i]) self.save_image(img_url, filename) #保存图像 def save_image(self, img_url, filename): folder_path = r&#x27;D:\\王沛杰\\爬虫\\imgs&#x27; # 确保文件夹存在 if not os.path.exists(folder_path): os.makedirs(folder_path) try: # 修改文件名包含路径 filename = os.path.join(folder_path, filename) with requests.Session() as session: img = session.get(url = img_url, headers = &#123;&#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0&#x27;&#125;).content with open(filename, &#x27;wb&#x27;) as f: f.write(img) print(filename, &#x27;下载成功&#x27;) except requests.exceptions.RequestException as e: print(f&#x27;下载失败: &#123;e&#125;&#x27;) except OSError as e: print(f&#x27;文件操作失败: &#123;e&#125;&#x27;) #入口函数 def run(self): word = input(&#x27;请输入搜索内容：&#x27;) begin = int(input(&#x27;输入起始页：&#x27;)) stop = int(input(&#x27;输入终止页：&#x27;)) for page in range(begin, stop+1): #拼接URL地址 params=&#123; &#x27;page&#x27;: str(page) &#125; word2 = parse.quote(word) result = parse.urlencode(params) url = self.url.format(word2, result) #发请求 html = self.get_html(url) self.parse_html_1(html) #提示 print(&#x27;第%d页抓取成功&#x27; %page) #每爬取一个页面随机休眠1-2秒钟的时间 time.sleep(random.randint(1, 2)) #以脚本的形式启动爬虫if __name__ == &#x27;__main__&#x27;: start = time.time() spider = Crawler() spider.run() end = time.time() print(&#x27;执行时间: %.2f&#x27; %(end-start)) 如果您不想下载图片，可以将一级页面解析函数中的self.get_image(img_list, movies_data)注释掉。 4· 最终效果 效果图😋","categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"}],"tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://example.com/tags/%E7%88%AC%E8%99%AB/"},{"name":"python","slug":"python","permalink":"http://example.com/tags/python/"}]},{"title":"三种迭代法 Three iteration","slug":"三种迭代法","date":"2025-09-14T12:59:54.035Z","updated":"2025-09-17T08:21:33.332Z","comments":true,"path":"post/3.html","permalink":"http://example.com/post/3.html","excerpt":"","text":"使用方法clearn=10;for i = 1:n for j = 1:n A(i,j)=vpa(1/(i+j-1)); % 创建希尔伯特矩阵 endendb=ones(n,1); % 创建全1的右端向量I=1000;w=0.5; % 设置最大迭代次数和松弛因子% 调用三种迭代方法[x,t,it] = Iteration(A,b,I,eps)norm(x)[x,t,it] = GaussSeidel(A,b,I,eps)norm(x)[x,t,it,w] = SOR(A,b,I,eps,w)norm(x) Jacobi迭代法function [x,t,it] = Iteration(A,b,I,eps)% Jacobi迭代法% 输入：% A: 系数矩阵% b: 载荷矩阵% I: 最大迭代次数% eps: 收敛精度% 输出：% x: 解矩阵% t: 计算时间% it: 实际迭代次数if nargin &lt; 4 eps = 1e-6;endtic[n,~] = size(A);B = zeros(size(A));x = zeros(n,1);f = zeros(n,1);% 构造迭代矩阵B和向量ffor r = 1:n for l = 1:n if l == r B(r,r) = 0; else B(r,l) = -A(r,l)/A(r,r); end end f(r) = b(r)/A(r,r);endx_exact = A\\b; % 精确解（用于比较）it = 1;for k = 1:I-1 x = B*x+f; if norm(x-x_exact)&gt;eps it = it+1; endendt = toc;end Gauss-Seidel迭代法function [x,t,it] = GaussSeidel(A,b,I,eps)% 高斯-赛德尔(Gauss-Seidel)迭代法% 输入：% A: 系数矩阵% b: 载荷矩阵% I: 最大迭代次数% eps: 收敛精度% 输出：% x: 解矩阵% t: 计算时间% it: 实际迭代次数if nargin &lt; 4 eps = 1e-6;endtic[n,~] = size(A);x = zeros(n,1);% 矩阵分解D = diag(diag(A)); % 对角矩阵L = -tril(A,-1); % 严格下三角部分（取负）U = -triu(A,1); % 严格上三角部分（取负）G = (D-L)\\U; % 迭代矩阵f = (D-L)\\b; % 迭代向量x_exact = A\\b; % 精确解（用于比较）it = 1;for k = 1:I-1 x = G*x+f; if norm(x_exact-x)&gt;eps it = it+1; endendt = toc;end SOR迭代法function [x,t,it,w] = SOR(A,b,I,eps,w)% 逐次超松驰迭代法(successive over relaxation method)% 输入：% A: 系数矩阵% b: 载荷矩阵% I: 最大迭代次数% eps: 收敛精度% w: 松弛因子(w=1 时即为 Gauss-Seidel 迭代法)% 输出：% x: 解矩阵% t: 计算时间% it: 实际迭代次数% w: 实际使用的松弛因子tic[n,~] = size(A);x = zeros(n,1);% 矩阵分解D = diag(diag(A)); % 对角矩阵L = -tril(A,-1); % 严格下三角部分（取负）U = -triu(A,1); % 严格上三角部分（取负）% 计算最佳松弛因子w_opt = 2/(1+sqrt(1-(max(abs(eig(D\\(L+U))))))^2);if nargin &lt; 4 eps = 1e-6; w = w_opt;endif nargin &lt; 5 w = w_opt;end% 构造迭代矩阵和向量Lw = (D-w*L)\\((1-w)*D+w*U);f = w*((D-w*L)\\b);x_exact = A\\b; % 精确解（用于比较）it = 1;for k = 1:I-1 x = Lw*x+f; if norm(x-x_exact)&gt;eps it = it+1; endendt = toc;end 注意：实际应用中通常使用两次迭代解的差值作为收敛判断标准。收敛速度：SOR（最佳w） &gt; Gauss-Seidel &gt; Jacobi","categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"}],"tags":[{"name":"Jacobi迭代法","slug":"Jacobi迭代法","permalink":"http://example.com/tags/Jacobi%E8%BF%AD%E4%BB%A3%E6%B3%95/"},{"name":"Gauss-Seidel迭代法","slug":"Gauss-Seidel迭代法","permalink":"http://example.com/tags/Gauss-Seidel%E8%BF%AD%E4%BB%A3%E6%B3%95/"},{"name":"SOR迭代法","slug":"SOR迭代法","permalink":"http://example.com/tags/SOR%E8%BF%AD%E4%BB%A3%E6%B3%95/"}]},{"title":"高斯消元法 Gaussian elimination","slug":"高斯消元法","date":"2025-09-14T09:47:13.467Z","updated":"2025-09-17T08:20:49.301Z","comments":true,"path":"post/2.html","permalink":"http://example.com/post/2.html","excerpt":"","text":"A&#x3D;[1,4,7;2,5,8;3,6,10];b&#x3D;[12,15,19];gauss(A,b) function [x]=gauss(A,b) % 将A转换为上三角矩阵 n=size(A,1); % 获取矩阵A的行数 for k=1:n-1 % 遍历每一列进行消元 for i=k+1:n % 处理当前列下方的每一行 t=A(i,k)/A(k,k); % 计算消元系数 for j=k+1:n % 子循环：更新当前行的元素 A(i,j)=A(i,j)-t*A(k,j); end b(i)=b(i)-t*b(k); % 更新右端向量b end end % 回代过程 x(n)=b(n)/A(n,n); % 求解最后一个未知数xn for k=n-1:-1:1 % 从倒数第二个未知数开始回代 s=0; % 初始化求和变量 for l=k+1:n s=s+A(k,l)*x(l); % 计算已知项的线性组合 end x(k)=(b(k)-s)/A(k,k); % 求解当前未知数 endend 注意：输入的系数矩阵A应为方阵。算法假设矩阵A是非奇异的，能够找到唯一解。","categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"}],"tags":[{"name":"高斯消元法","slug":"高斯消元法","permalink":"http://example.com/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83%E6%B3%95/"},{"name":"线性方程组","slug":"线性方程组","permalink":"http://example.com/tags/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84/"}]},{"title":"《被隐藏的文章》","slug":"丰川同学","date":"2025-09-10T08:54:55.992Z","updated":"2025-09-17T08:20:20.069Z","comments":true,"path":"post/1.html","permalink":"http://example.com/post/1.html","excerpt":"","text":"## 《小声对我说日语的邻座丰川同学》 丰川祥子是不久前从东京转学到这里的，是我的邻座。她冰清玉洁，落落大方，也许是不适应新环境，她高傲冷淡的样子仿佛有一层心之壁包裹着她。她举止得体，谈吐不凡，颇有大家闺秀之风。她五官精致，面带春风，一头银发似漆黑夜空中的皎月，引人无限遐想，见过她的人嘴角无不露出笑意。 在东京的涩谷街头，我和神里手牵手走在街上，她娇羞的样子让人垂涎欲滴，扭捏的性格使人欲罢不能。街景一直在后退，像幻灯片一样，人潮涌动像海上的波浪，我们随波逐流飘荡在人世间，漆黑的夜空中淅淅沥沥的下着小雨，雨滴被漫无边际的海面吸收，彻底没了踪迹······我正沉浸在这样的遐想之中，黑暗中有人把手搭在了我的背上。 “别趴着睡觉了，该上早自习了呦！”一个声音惊醒了我。我伸了个懒腰，伴随着朦胧的睡意“啊，是神里同学啊，不好意思又犯困了。”“かわいい！”“诶？你刚才说什么？”我疑惑不解地问道。“没什么，就是提醒你要好好学习。”神里用手半遮面，露出了神秘的笑容。……我并不了解她的身世，然而在与她朝夕相处的过程中，我的心好像慢慢改变了，该怎么形容这种复杂的情感，是苦涩还是幸福呢？对于懵懂无知的我来说，她好像就是世界的全部，复杂的思绪萦绕像云雾一般包裹住我的心脏，令我几乎窒息。她对我又是什么感觉呢，她的心中也升起了那道彩虹吗？cover: https://pic.xn--kiv.fun/uploads/2025/09/10/19/68c15f1063da9.png","categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"}],"tags":[]},{"title":"数学分析","slug":"数学分析","date":"2025-09-10T08:36:00.575Z","updated":"2025-09-25T02:56:39.415Z","comments":true,"path":"post/0.html","permalink":"http://example.com/post/0.html","excerpt":"","text":"数学分析2025年6月18日 17:03 导数 可微 商的导数 连续 数学归纳法 链式法则 关键点 最大值 中间值定理 罗尔定理 平均值定理 推论 指数函数 对数函数定理 对数定义 三个极限 量级比较 反函数 中值定理 反函数的导数","categories":[{"name":"Maths","slug":"Maths","permalink":"http://example.com/categories/Maths/"}],"tags":[{"name":"导数","slug":"导数","permalink":"http://example.com/tags/%E5%AF%BC%E6%95%B0/"},{"name":"中值定理","slug":"中值定理","permalink":"http://example.com/tags/%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86/"},{"name":"基础函数","slug":"基础函数","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0/"}]},{"title":"Hello World","slug":"hello-world","date":"2025-09-09T14:08:05.336Z","updated":"2025-09-09T15:03:16.204Z","comments":true,"path":"post/3eeb.html","permalink":"http://example.com/post/3eeb.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"},{"name":"Maths","slug":"Maths","permalink":"http://example.com/categories/Maths/"}],"tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://example.com/tags/%E7%88%AC%E8%99%AB/"},{"name":"python","slug":"python","permalink":"http://example.com/tags/python/"},{"name":"Jacobi迭代法","slug":"Jacobi迭代法","permalink":"http://example.com/tags/Jacobi%E8%BF%AD%E4%BB%A3%E6%B3%95/"},{"name":"Gauss-Seidel迭代法","slug":"Gauss-Seidel迭代法","permalink":"http://example.com/tags/Gauss-Seidel%E8%BF%AD%E4%BB%A3%E6%B3%95/"},{"name":"SOR迭代法","slug":"SOR迭代法","permalink":"http://example.com/tags/SOR%E8%BF%AD%E4%BB%A3%E6%B3%95/"},{"name":"高斯消元法","slug":"高斯消元法","permalink":"http://example.com/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83%E6%B3%95/"},{"name":"线性方程组","slug":"线性方程组","permalink":"http://example.com/tags/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84/"},{"name":"导数","slug":"导数","permalink":"http://example.com/tags/%E5%AF%BC%E6%95%B0/"},{"name":"中值定理","slug":"中值定理","permalink":"http://example.com/tags/%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86/"},{"name":"基础函数","slug":"基础函数","permalink":"http://example.com/tags/%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0/"}]}